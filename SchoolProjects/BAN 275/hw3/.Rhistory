rbind(DT[2,],DT[2,],DT[3])
DT <- data.table(a=c(rep(1:2,2)),c('A','B','C','D'))
DT[.N] #last row
DT[.N-1]
DT[.N-2]
DT[,.(B)]
DT[,.(b)]
DT
DT <- data.table(a=c(rep(1:2,2)),b=c('A','B','C','D'))
DT[,.(b)]
class(DT[,.(b)])
?data.table
c=1
c%%2
?substring
substring('ser',1)
substring('ser',1,1)
DT <- data.table(A=1:5,B=c('a','b','c','d','e'),C=6:10)
# .() is an alias to list() in data.tables and they mean the same.
# Subset rows 1 and 3, and columns B and C
DT[c(1,3),.(B,C)]
# Assign to ans the correct value
ans <- DT[,.(B,val=A*C)]
# Fill in the blank
answ <- DT[, .(B, val = c(C,A))]
DT <- data.table(A=1:5,B=c('a','b','c','d','e'),C=6:10)
# .() is an alias to list() in data.tables and they mean the same.
# Subset rows 1 and 3, and columns B and C
DT[c(1,3),.(B,C)]
# Assign to ans the correct value
ans <- DT[,.(B,val=A*C)]
# Fill in the blank
answ <- DT[, .(B, val = c(C,A))]
?cum
?prod
?cumm
??cum
dt <- c(31.18)
dt <- c(31.18, 27,25.91,25.83,24.76,27.4,25.83)
dt
dt <- c(31.18, 27,25.91,25.83,24.76,27.4,25.83,26.27,24.51,25.05,28.28,30.45,30.51)
dt
dt[13]
(dt[13]-dt[1])/dt[1]
dt[13]/dt[1]
(dt[2]-dt[1])/dt[1]
log(dt[2])/log(dt[1])
log(dt[2])/log(dt[1])-1
library('quantmod')
getSymbols('SPY',src='yahoo')
spy.sub <- SPY['2013-01-01::2014-12-31',]
# 2)
chartSeries(spy.sub,theme='white',TA =
"addBBands();addVo();addEMA()")
plot(spy.sub[,'SPY.Close'],main="The Closing Stock Price", xlab="Date",ylab="Price")
# 3)
head(spy.sub)
d.log.ret <- dailyReturn(spy.sub,type='log')
head(d.log.ret)
dailyReturn(dt)
dailyReturn(ts(dt))
monthlyReturn(ts(dt))
dt[2]
dt[1]
log[2]/log[1]
dt[2]/dt[1]
dt[2]/dt[1]-1
log(dt[2])/log(dt[1])
log(dt[2])/log(dt[1])-1
dt[2]/dt[1]-1
q1 <- dt[2]/dt[1]-1
q1^12
q1
q1*12
(1+q1)^12
log(dt[2]/dt[1])
SAR <- (1+SMR)*12
SMR <- dt[2]/dt[1]-1
CCR <- log(dt[2]/dt[1])
#q4-
SAR <- (1+SMR)*12
SMR
SAR
SAR <- (1+SMR)^12
SAR
SAR <- (1+SMR)^12-1
SAR
CCMR
CCMR <- log(dt[2]/dt[1])
CCMR
CCMR/12
CCMR*12
dt[13]
SMR2 <- dt[13]/dt[1]-1
SMR2
1-0.214
1000*(1+SMR2)
CCMR2 <- log(dt[13]/dt[1])
CCMR2
getSymbols('SBUX',src='yahoo')
sbux <- SBUX['2013-01-01::2014-12-31',]
sbux <- SBUX['1993-03-31::2008-03-31',]
getSymbols('SBUX',src='yahoo')
sbux <- SBUX['1993-03-31::2008-03-31',]
sbux
chartSeries(sbux)
SBUX
sbux <- SBUX['1993-03-31::200603-31',]
sbux
sbux <- SBUX['1993-03-31::2006-03-31',]
sbux
?getSymbols
sbux <- SBUX['1993-03-31::200603-31']
sbux
sbux <- SBUX['1993-03-31::2006-03-31']
sbux
getwd()
setwd("/Users/gabrielfeng/Documents/R directory/Coursera/UW")
read.csv('sbux')
read.csv('sbux.csv')
sbux<-read.csv('sbux.csv')
plot(sbux)
plot.ts(sbux)
plot.ts(sbux[,6])
plot.ts(sbux[,7])
chartSeries(sbux)
chartSeries(ts(sbux))
ts(sbux)
timeSeries(sbux)
timeseries(sbux)
library(timeSeries)
timeSeries(sbux)
chartSeries(ts(sbux))
chartSeries(sbux)
sbux<-timeSeries(sbux)
chartSeries(sbux)
chartSeries(xts(sbux))
sbux
plot.ts(sbux)
plot.ts(sbux[,7])
plot.ts(sbux)
sbux['Close']
name(sbux)
names(sbux)
sbux[,'Close']
cl[-1]
cl <- sbux[,'Close']
cl[-1]
cl <- sbux[,'Close']
cl <- sbux[,'Close']
cl[length(cl)]
class(cl)
sbux<-read.csv('sbux.csv')
cl <- sbux[,'Close']
cl[length(cl)]
cl[length(cl)]/cl[1]*1000
cl[length(cl)]/cl[1]
class(cl)
names(sbux)
cl <- sbux[,'Adj.Close']
log(cl[length(cl)]/cl[1])
cl[length(cl)]/cl[1]
cl
cl[1]/cl[length(cl)]
log(cl[1]/cl[length(cl)])
log(cl[1]/cl[length(cl)])/15
cl <- sbux[,'Close']
cl[1]/cl[length(cl)]
log(cl[1]/cl[length(cl)])/15
cl
cl[1:length(cl)-1]/cl[2:length(cl)]
smr <- cl[1:length(cl)-1]/cl[2:length(cl)]
plot(smr)
plot.ts(smr)
grid on
sbux<-read.csv('sbux.csv')
cl <- sbux[,'Adj.Close']
cl
cl[1]/cl[length(cl)]
log(cl[1]/cl[length(cl)])/15
log(cl[1]/cl[length(cl)])*12/15
log(cl[1]/cl[length(cl)])/15/12
log(cl[1]/cl[length(cl)])/15
??log
?logrithm
??logrithm
log(log(cl[1]/cl[length(cl)]),base=15)
log(cl[1]/cl[length(cl)])
log(cl[1]/cl[length(cl)],base=15)
cl[1]/cl[length(cl)]
cl[1]
log(cl[1]/cl[length(cl)]－1,base=15)
log(cl[1]/cl[length(cl)]-1,base=15)
cl[1]/cl[length(cl)]
(cl[1]/cl[length(cl)])^(1/15)
(cl[1]/cl[length(cl)])^(1/15)-
(cl[1]/cl[length(cl)])^(1/15)-
(cl[1]/cl[length(cl)])^(1/15)-1
?qnorm
pnorm(0.05,0.1)
pnorm(0.1,0.05,0.1)
qnorm(0.1,0.05,0.1)
pnorm(0.9,0.05,0.1)
pnorm(0.1,0.05,0.1)
qnorm(0.1,0.05,0.1)
1-pnorm(0.1,0.05,0.1)
pnorm(-0.1,0.05,0.1)
pnorm(0.15,0.05,0.1)-pnorm(-0.05,0.05,0.1)
q4 <- qnorm(0.01, 0.05,0.1)
q4 <- qnorm(0.01, 0.05,0.1)
q5 <- qnorm(0.05, 0.05,0.1)
q6 <- qnorm(0.95, 0.05,0.1)
q6 <- qnorm(0.99, 0.05,0.1)
q6 <- qnorm(0.95, 0.05,0.1)
q7 <- qnorm(0.99, 0.05,0.1)
pnorm(0.05,0.04,0.09)
e
exp^2
exp
exp(2)
exp(1)
qr <- 0.04+0.09*2.326
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-2.326)
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-1.645)
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-2.326) #1%
100000*qr
qr <- 0.04+0.09*(-1.645) #5%
100000*qr
41.29/38.23-1
41.74/41.11-1
log(41.29/38.23)
log(41.74/41.11)
41.39/38.23-1
0.1/38.23-1
b<-41.29/38.23-1
a<-41.39/38.23-1
a-b
b^12
(1+b)^12
b<-41.29/38.23-1
c<-41.74/41.11-1
8000*(1+b)
2000*(1+c)
ama <- 8000*(1+b)
cos <- 2000*(1+c)
ama/(ama+cos)
(ama+cos)/10000-1
q1 <- 1-pnorm(0.1,0.05,0.1)
q4 <- qnorm(0.01, 0.05,0.1)
q7 <- qnorm(0.99, 0.05,0.1)
qr <- 0.04+0.09*(-2.326) #1%
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-1.645) #5%
qR <- exp(qr)-1
100000*qR
8000/41.29
2000/41.74
193/47
193/240
qnorm(0.05,0.04,0.09)
qnorm(0.01,0.04,0.09)
qnorm(0.01,0.05,0.09)
qnorm(0.01,0.04,0.09)
qnorm(0.01,0.05,0.1)
qnorm(0.05,0.05,0.1)
qnorm(0.95,0.05,0.1)
qnorm(0.99,0.05,0.1)
qnorm(-0.99,0.05,0.1)
qr <- 0.04+0.09*(-2.326) #1%
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-1.645) #5%
qR <- exp(qr)-1
100000*qR
qR <- exp(qnorm(0.01,0.04,0.09))-1
100000*qR
qR <- exp(qnorm(0.05,0.04,0.09))-1
qR
q1 <- 1-pnorm(0.1,0.05,0.1)
q2 <- pnorm(-0.1,0.05,0.1)
q3 <- pnorm(0.15,0.05,0.1)-pnorm(-0.05,0.05,0.1)
q4 <- qnorm(0.01, 0.05,0.1)
q5 <- qnorm(0.05, 0.05,0.1)
q6 <- qnorm(0.95, 0.05,0.1)
q7 <- qnorm(0.99, 0.05,0.1)
qR <- exp(qnorm(0.05,0.04,0.09))-1
qr <- 0.04+0.09*(-2.326) #1%
100000*qr
qr <- 0.04+0.09*(-1.645) #5%
100000*qr
b<-41.29/38.23-1
c<-41.74/41.11-1
b
c
log(41.29/38.23)
log(41.74/41.11)
a<-41.39/38.23-1
a-b
a
(1+b)^12
ama <- 8000*(1+b)
cos <- 2000*(1+c)
ama/(ama+cos)
(ama+cos)/10000-1
jd <- matrix(c(0.1,0.2,0,0.1,0,0.2,0,0.1,0.3),3,3)
jd
sum(jd)
?sum
sum(jd[,1])
rowSum(jd)
?rowsum
rowsum(jd)
rowsum(jd,3)
tapply(jd,sum)
sapply(jd,sum)
jd
jd <- matrix(c(0.1,0.2,0,0.1,0,0.2,0,0.1,0.3),3,3)
EX <- 0.3*1+0.3*2+0.4*3
EY <- 0.2*1+0.3*2+0.5*3
?sum
rowSums(jd)
EX <- rowSums(jd)*1:3
EX
EY <- colSums(jd)*1:3
EX <- rowSums(jd)*1:3
EY <- colSums(jd)*1:3
c(rowSums(jd)*1:3,1)
c
cbind(jd,rowSums(jd)*1:3)
jd <- rbind(jd,c(colSums(jd)*1:3,1)
)
jd
jd <- matrix(c(0.1,0.2,0,0.1,0,0.2,0,0.1,0.3),3,3)
jd <- cbind(jd,rowSums(jd)*1:3)
jd
jd <- rbind(jd,c(colSums(jd)*1:3,1))
c(colSums(jd)*1:3,1)
jd <- matrix(c(0.1,0.2,0,0.1,0,0.2,0,0.1,0.3),3,3)
jd <- cbind(jd,rowSums(jd)*1:3)
colSums(jd)*1:3
colSums(jd[,1:3])*1:3
jd <- matrix(c(0.1,0.2,0,0.1,0,0.2,0,0.1,0.3),3,3)
jd <- cbind(jd,rowSums(jd))
jd <- rbind(jd,colSums(jd))
jd
EY <- jd[4,1:3]*1:3
EX <- jd[1:3,4]*1:3
EX
EY <- sum(jd[4,1:3]*1:3)
EX <- sum(jd[1:3,4]*1:3)
sum((jd[4,1:3]-EY)^2)
sum((jd[4,1:3]-EY)^2)^(1/2)
sum((jd[4,1:3]-EY)^2*jd[4,1:3])^(1/2)
jd[4,1:3]-EY)^2
(jd[4,1:3]-EY)^2
(jd[4,1:3]-EY)^2*jd[4,1:3]
sum((1:3-EY)^2*jd[4,1:3])
varX <- sum((1:3-EX)^2*jd[1:3,4])
varY^0.5
varX^0.5
varY <- sum((1:3-EY)^2*jd[4,1:3])
varX <- sum((1:3-EX)^2*jd[1:3,4])
varY^0.5
varX^0.5
ep <- cbind(t(EX), t(EY))
ep
jd
qr <- 0.04+0.09*(-2.326) #1%
qR <- exp(qr)-1
100000*qR
qr <- 0.04+0.09*(-1.645) #5%
qR <- exp(qr)-1
100000*qR
#q10
qr <- 0.04+0.09*(-2.326) #1%
100000*qr
qr <- 0.04+0.09*(-1.645) #5%
100000*qr
#q11-13
qnorm(0.01,0.04,0.09)
qnorm(0.05,0.04,0.09)
qr <- 0.04+0.09*(-2.326) #1%
qR <- exp(qr)-1
qR
?plot
?ylim
library(PerformanceAnalytics)
library(zoo)
library(tseries)
install.packages('PerformanceAnalytics')
library(PerformanceAnalytics)
library(zoo)
library(tseries)
?start
?start
method(start)
methods(start)
?end
?coredata
A <- matrix(c(1,4,7,2,4,8,6,1,3),3,3)
B <- matrix(c(4,4,0,5,9,1,2,2,5),3,3)
y <- t(c(5,2,7))
A <- matrix(c(1,4,7,2,4,8,6,1,3),3,3)
B <- matrix(c(4,4,0,5,9,1,2,2,5),3,3)
x <- t(c(1,2,3))
y <- t(c(5,2,7))
x
t(x)
x <- matrix(c(1,2,3)
)
x
y <- matrix(c(5,2,7))
y
t(A)
A
?matrix
A <- matrix(c(1,4,7,2,4,8,6,1,3),3,3,byrow=T)
B <- matrix(c(4,4,0,5,9,1,2,2,5),3,3,byrow=T)
x <- matrix(c(1,2,3))
y <- matrix(c(5,2,7))
t(A)
t(B)
A <- matrix(c(1,4,7,2,4,8,6,1,3),3,3,byrow=T)
B <- matrix(c(4,4,0,5,9,1,2,2,5),3,3,byrow=T)
t(B)
t(x)
A +B
A-B
A%*%x
Ax
A*x
t(y)%*%A
t(y)%*%A%*%x
t(A)
t(B)
t(x)
A+B
A-B
2*A
A%*%x
t(y)%*%A%*%x
mu <- matrix(c(.01,.04,.02))
mu
sig <- matrix(c(.1,.3,.1,.3,.15,-.2,.1,-.2,.08),3,3)
sig
sig%*%mu
sum(sig%*%mu)/3
sum(mu)/3
sig%*%mu
t(mu)%*%sig%*%mu
t(mu)%*%sig%*%(mu/3)
library(timeSeries)
library(quantmod)
library(tseries)
setwd('/Users/gabrielfeng/Documents/R directory/BAN 275/hw3')
dt <- read.csv('H3 x1-x5(1).csv')[,-1]
#Q1:
par(mfcol=c(2,2))
for ( i in 1:5) {
t.acf <- acf(dt[,i],50)
t.pacf <- pacf(dt[,i],50)
}
#Q2
x4 <- dt$x4
x5 <- dt$x5
acf(diff(x5))
acf(diff(x5), type = "partial")
sum = sum(diff(x5) - x4[-1])
cor(x5,x4)
cor(diff(x5),x4[-1])
#Q3
require(xts)   # for proper lag
x2 <- timeSeries(dt$x2)
fit.lag <- summary(lm(x2 ~ lag(x2), na.action = na.omit))
fit.lag
#################test for as.xts##################
# for numeric object
rm(x2)
x2.num <- dt[,2]
x2.ts <- as.xts(x2.num)
summary(lm(x2.ts ~ lag(x2.ts), na.action = na.omit))
# for data frame object
rm(x2)
x2.df <- as.data.frame(x2)
x2.ts <- as.xts(x2.df)
fit.lag <- summary(lm(x2.ts ~ lag(x2.ts), na.action = na.omit))
# for timeserises object without using as.xts
rm(x2)
x2 <- dt[,2]
x2.ts <-as.timeSeries(x2)
fit.lag <- summary(lm(x2.ts ~ lag(x2.ts), na.action = na.omit))
# my way
x2.ts <- timeSeries(dt$x2)
fit.lag <- summary(lm(x2.ts ~ lag(x2.ts), na.action = na.omit))
fit.lag
par(mfcol=c(2,2))
for ( i in 1:5) {
t.acf <- acf(dt[,i],50)
t.pacf <- pacf(dt[,i],50)
}
par(mfcol=c(2,2))
for ( i in 1:5) {
t.acf <- acf(dt[,i],50)
t.pacf <- pacf(dt[,i],50)
}
